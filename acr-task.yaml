version: v1.1.0
steps:
  # Log in to Docker Hub
  - cmd: >
      docker login {{.Values.REGISTRY_FROM_URL}} 
      --username '{{.Values.REGISTRY_FROM_USER}}' 
      --password '{{.Values.REGISTRY_FROM_PASSWORD}}'
  - id: build-base-image-test
    # Build off the base image we'll track
    # Add a test script to do unit test validations
    build: >
      --build-arg REGISTRY_URL={{.Values.REGISTRY_FROM_URL}} 
      -f ./Dockerfile
      -t {{.Run.Registry}}/node-import:test
      .
  - id: az-login
    # login with the identity of the task
    # run concurrently while the image is building: when: [-] indicates, wait for nothing
    cmd: >
      az login --identity > /dev/null
  - id: validate-base-image
    # only continues if node-import:test returns a non-zero code
    when: ['build-base-image-test', 'az-login']
    cmd: {{.Run.Registry}}/node-import:test
  - id: import-node-to-base-artifacts
    # Once login and image validation is/if complete, 
    # import the public image to base-artifacts
    # Note: we don't save the test validation image,
    # but the logs captures any log validation issues
    # We do override the stable tag, 
    # but we also create a unique tag to enable rollback 
    # to a previously working image
    when: ['az-login', 'validate-base-image']
    cmd: >
      az acr import 
      --name {{.Values.REGISTRY}} 
      --source {{.Values.REGISTRY_FROM_URL}}node:15-alpine
      -t node:15-alpine-{{.Run.ID}}
      -t node:15-alpine
      --force
